--mysql with docker
--docker run --name mysql -e MYSQL_ROOT_PASSWORD="mysql" -e MYSQL_USER="leo" -e MYSQL_PASSWORD="mysql" -e MYSQL_DATABASE="INCOME_OUTCOME" -p "3306:3306" -d mysql

--configs on DBeaver

--allowPublicKeyRetrieval = true
--useSSL = false

--create a INCOME AND OUTCOME 

--CREATE THE PAYMENT TYPE
CREATE TABLE PAYMENT_TYPE(
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  DESCR VARCHAR(255) NOT NULL UNIQUE
);
INSERT INTO PAYMENT_TYPE (DESCR) VALUES ('CARD');
INSERT INTO PAYMENT_TYPE (DESCR) VALUES ('MONEY');

SELECT * FROM PAYMENT_TYPE;

--CREATE THE INCOME_OUTCOME_TYPE
CREATE TABLE INCOME_OUTCOME_TYPE (
  TYPE_CODE CHAR(1) NOT NULL PRIMARY KEY,
  TYPE_DESCR VARCHAR(50) NOT NULL,
  DT_CREATED DATETIME NOT NULL
);
INSERT INTO INCOME_OUTCOME_TYPE (TYPE_CODE, TYPE_DESCR, DT_CREATED) VALUES ('I', 'INCOME', NOW());
INSERT INTO INCOME_OUTCOME_TYPE (TYPE_CODE, TYPE_DESCR, DT_CREATED) VALUES ('O', 'OUTCOME', NOW());

SELECT * FROM INCOME_OUTCOME_TYPE;


CREATE TABLE OUTCOME_TYPE(
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  DESCR VARCHAR(50)
);
INSERT INTO OUTCOME_TYPE (DESCR) VALUES ('SUPERMARKETING');
INSERT INTO OUTCOME_TYPE (DESCR) VALUES ('GAS STATION');
INSERT INTO OUTCOME_TYPE (DESCR) VALUES ('RESTAURANTS');
INSERT INTO OUTCOME_TYPE (DESCR) VALUES ('BILLS');
INSERT INTO OUTCOME_TYPE (DESCR) VALUES ('DOCTOR');

SELECT * FROM OUTCOME_TYPE;


CREATE TABLE INCOME_OUTCOME(
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  INCOME_OUTCOME_VALUE DOUBLE NOT NULL,
  DESCR VARCHAR(255) NOT NULL,
  DT_TRANSACTION DATE NOT NULL,
  DT_CREATED DATETIME NOT NULL,
  FK_OUTCOME_TYPE INT,
  FK_PAYMENT_TYPE INT,
  FK_INCOME_OUTCOME_TYPE CHAR(1) NOT NULL,
  FOREIGN KEY (FK_OUTCOME_TYPE) REFERENCES OUTCOME_TYPE(ID),
  FOREIGN KEY (FK_PAYMENT_TYPE) REFERENCES PAYMENT_TYPE(ID),
  FOREIGN KEY (FK_INCOME_OUTCOME_TYPE) REFERENCES INCOME_OUTCOME_TYPE(TYPE_CODE)
);

-- ADD SOME INCOMES
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (1000, 'SALARY', '2020-08-01', NOW(), NULL, NULL, 'I');
-- ADD SOME OUTCOMES
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (55.00, 'WATER ', '2020-08-02', NOW(), 4, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (30.50, 'INTERNET ', '2020-08-02', NOW(), 4, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (800.00, 'RENT ', '2020-08-02', NOW(), 4, 2, 'O');

--CHECK TOTAL OF INCOME
SELECT SUM(INCOME_OUTCOME_VALUE)
FROM INCOME_OUTCOME
WHERE FK_INCOME_OUTCOME_TYPE = 'I';

--CHECK TOTAL OF OUTCOME
SELECT SUM(INCOME_OUTCOME_VALUE)
FROM INCOME_OUTCOME
WHERE FK_INCOME_OUTCOME_TYPE = 'O';

--TOTAL WITH GROUP BY
SELECT SUM(INCOME_OUTCOME_VALUE) AS TOTAL, FK_INCOME_OUTCOME_TYPE AS TYPE
FROM INCOME_OUTCOME
GROUP BY FK_INCOME_OUTCOME_TYPE;

-- AVERAGE OF OUTCOME AND INCOME
SELECT AVG(INCOME_OUTCOME_VALUE) AS TOTAL, FK_INCOME_OUTCOME_TYPE AS TYPE
FROM INCOME_OUTCOME
GROUP BY FK_INCOME_OUTCOME_TYPE;


--ADD ANOTHER OUTCOMES
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (55.00, 'LIDL ', '2020-08-10', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (30.50, 'DINNER PIZZA ', '2020-08-14', NOW(), 3, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (20.00, 'GAS MOTORBIKE', '2020-08-23', NOW(), 2, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (50.00, 'VACCINES TEO', '2020-08-12', NOW(), 5, 2, 'O');

-- VALUE BY TYPE OF FK_OUTCOME_TYPE
SELECT * 
FROM INCOME_OUTCOME
WHERE FK_INCOME_OUTCOME_TYPE = 'O';

SELECT SUM(INCOME_OUTCOME_VALUE) AS OUTCOME_TOTAL
FROM INCOME_OUTCOME
WHERE FK_INCOME_OUTCOME_TYPE = 'O';

SELECT SUM(INCOME_OUTCOME_VALUE) AS OUTCOME_TOTAL, FK_OUTCOME_TYPE AS OUTCOME_TYPE
FROM INCOME_OUTCOME
WHERE FK_INCOME_OUTCOME_TYPE = 'O'; -- ERROR BECAUSE NEED GROUP BY

SELECT * FROM INCOME_OUTCOME;

--TOTAL OF OUTCOME
SELECT SUM(INCOME_OUTCOME_VALUE) AS OUTCOME_TOTAL, FK_OUTCOME_TYPE AS OUTCOME_TYPE
FROM INCOME_OUTCOME
WHERE FK_INCOME_OUTCOME_TYPE = 'O'
GROUP BY FK_OUTCOME_TYPE; 

INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (60.00, 'MERCADONA', '2020-08-20', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (50.00, 'LIDL', '2020-08-10', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (40.00, 'MERCADONA', '2020-08-30', NOW(), 1, 2, 'O');

--WITH NAMES
SELECT SUM(IO.INCOME_OUTCOME_VALUE) AS OUTCOME_TOTAL, OT.DESCR AS OUTCOME_TYPE
FROM INCOME_OUTCOME IO
INNER JOIN OUTCOME_TYPE OT ON (IO.FK_OUTCOME_TYPE = OT.ID ) 
WHERE FK_INCOME_OUTCOME_TYPE = 'O'
GROUP BY OUTCOME_TYPE; 

-- SUM TOTAL WITH DESCR
SELECT SUM(INCOME_OUTCOME_VALUE) AS TOTAL, DESCR
FROM INCOME_OUTCOME
GROUP BY DESCR;

-- YEAR REPORT TOTAL
SELECT SUM(IO.INCOME_OUTCOME_VALUE) AS OUTCOME_TOTAL, IOT.TYPE_DESCR AS INCOME_OUTCOME_TYPE, MONTHNAME(DT_TRANSACTION)
FROM INCOME_OUTCOME IO
INNER JOIN INCOME_OUTCOME_TYPE IOT ON (IO.FK_INCOME_OUTCOME_TYPE = IOT.TYPE_CODE)
GROUP BY INCOME_OUTCOME_TYPE, MONTHNAME(DT_TRANSACTION); 

--INCOME
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (1200.50, 'SALARY', '2020-09-01', NOW(), NULL, NULL, 'I');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (1110.10, 'SALARY', '2020-01-01', NOW(), NULL, NULL, 'I');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (1000, 'SALARY', '2020-02-01', NOW(), NULL, NULL, 'I');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (1000, 'SALARY', '2020-03-01', NOW(), NULL, NULL, 'I');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (1000, 'SALARY', '2020-04-01', NOW(), NULL, NULL, 'I');

INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (10.00, 'MERCADONA', '2020-01-20', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (30.00, 'LIDL', '2020-01-10', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (40.00, 'MERCADONA', '2020-01-30', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (100.00, 'MERCADONA', '2020-02-20', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (50.00, 'LIDL', '2020-02-10', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (40.00, 'MERCADONA', '2020-02-22', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (12.00, 'MERCADONA', '2020-03-20', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (23.00, 'LIDL', '2020-03-10', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (44.00, 'MERCADONA', '2020-03-30', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (55.00, 'MERCADONA', '2020-04-20', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (44.00, 'LIDL', '2020-04-10', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (12.00, 'MERCADONA', '2020-04-30', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (60.00, 'MERCADONA', '2020-09-20', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (50.00, 'LIDL', '2020-09-10', NOW(), 1, 2, 'O');
INSERT INTO INCOME_OUTCOME (INCOME_OUTCOME_VALUE, DESCR, DT_TRANSACTION, DT_CREATED, FK_OUTCOME_TYPE, FK_PAYMENT_TYPE, FK_INCOME_OUTCOME_TYPE) VALUES (40.00, 'MERCADONA', '2020-09-30', NOW(), 1, 2, 'O');

-- MONTH REPORT TOTAL

SELECT SUM(IO.INCOME_OUTCOME_VALUE) AS OUTCOME_TOTAL, IOT.TYPE_DESCR AS INCOME_OUTCOME_TYPE
FROM INCOME_OUTCOME IO
INNER JOIN INCOME_OUTCOME_TYPE IOT ON (IO.FK_INCOME_OUTCOME_TYPE = IOT.TYPE_CODE)
WHERE month(DT_TRANSACTION) = 8
GROUP BY INCOME_OUTCOME_TYPE; 

--CREATE VIEW WITH SELECT RESULT

CREATE VIEW INCOME_OUTCOME_YEAR AS
SELECT SUM(IO.INCOME_OUTCOME_VALUE) AS OUTCOME_TOTAL, IOT.TYPE_DESCR AS INCOME_OUTCOME_TYPE, MONTHNAME(DT_TRANSACTION)
FROM INCOME_OUTCOME IO
INNER JOIN INCOME_OUTCOME_TYPE IOT ON (IO.FK_INCOME_OUTCOME_TYPE = IOT.TYPE_CODE)
GROUP BY INCOME_OUTCOME_TYPE, MONTHNAME(DT_TRANSACTION);

SELECT * FROM INCOME_OUTCOME_YEAR;

--TOTAL INCOME YEAR
SELECT SUM(OUTCOME_TOTAL) AS OUTCOME_TOTAL, INCOME_OUTCOME_TYPE
FROM INCOME_OUTCOME_YEAR
GROUP BY INCOME_OUTCOME_TYPE